    
    WARNING: DO NOT USE THIS COMMAND OVER THE PUBLIC INTERNET. PRIVATE NETWORKS ONLY.
    
    Usage:
        nopass-ssh [-verbose] [-string... <expected-text>] <ssh-options> <remote> '<shell-script>'
        nopass-ssh -scp [-verbose] [-string... <expected-text>] <ssh-options> <from> <to>'
        nopass-ssh [-h|--help]
    
        nopass-ssh executes a command on a remote machine by reading the password
        from stdin, and then invoking ssh. This is different to regular ssh which
        will never read from stdin. This allows the user to script ssh commands.
        This is not for the purposes of general Unix administration; rather, it
        is useful for, say, if you are trying to pre-configure machines for shipping,
        or setup virtual machines.
    
        Example <ssh-options>:
            -l <user>               Specify login name.
            -X                      Enable X11 forwarding
    
        <remote>                    IP address or hostname.
        <from>                      scp remote or local source path.
        <to>                        scp remote or local destination path.
        '<shell-script>'            Script to be execute on <remote> machine.
        -string-yn <y/n>            String on which to send 'yes\r\n' response. Default: '(yes/no)?'
                                    (Trailing whitespace is ignored in ssh output.)
        -string-alt-yn <y/n/x>      Alternative string to -string-yn. Both are checked.
                                    Default: '(yes/no/[fingerprint])?'
        -string-pass <pass>         String on which to send password response. Default: 'password:'
                                    (Trailing whitespace is ignored in ssh output.)
        -string-login <login>       Optional string to wait on successful login. Not set by default.
                                    This is useful if you don't know whether ssh will prompt for a
                                    password, such as if there is authentication key configured in
                                    ~/.ssh/authorized_keys
        -verbose                    Debug messages. Can be used more than once.
        -h, --help                  Print this message.
    
    
    Example 1:
        $>
        $> echo 'My-p@ssW_Rd' | nopass-ssh -X -l elizabeth 10.1.23.45 'xterm'
        $>
        
    
    Example 2:
        $>
        $>
        $> echo 'mY-P@55w0rD' | nopass-ssh -l root 10.1.23.45 'head -1 /etc/passwd ; exit 21 ;'
        
        root:x:0:0:root:/home/root:/bin/bash
        $> echo $?
        21
        $>
        $>
    
    Example 3:
        $>
        $> ### Show strict and proper handling of nulls and raw binary data:
        $> echo 'mY-P@55w0rD' |  ./nopass-ssh -l root 10.1.23.45  'cat /bin/bash ; ' | md5sum
        31fe3883149b4baae31567db4c79f30  -
        $> echo 'mY-P@55w0rD' |  ./nopass-ssh -l root 10.1.23.45  'cat /bin/bash | md5sum ; '
        31fe3883149b4baae31567db4c79f30  -
        $>
    
    Example 4:
        $>
        $> echo 'My-p@ssW_Rd' | nopass-ssh -string-login Login-Ok -X -l elizabeth 10.1.23.45 'echo Login-Ok ; echo good ; '
        $>
        
    
    Example 5:
        $>
        $> echo 'My-p@ssW_Rd' | nopass-ssh -scp john@192.168.1.1:/home/john/mydoc.txt /home/john/
        $>
        
    
    
